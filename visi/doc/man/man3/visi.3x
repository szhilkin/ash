.TH VISI 3x VISI
.SH ИМЯ
visi, vcc, vlbp, vint
\- Visual System Interaction \- визуальное взаимодействие с системой
.SH
.ES
 +----------+   БИБЛИОТЕКА ВВОДА-ВЫВОДА
(c) linlib  !   ДЛЯ АЛФАВИТНО-ЦИФРОВЫХ
 +----------+   ВИДЕОТЕРМИНАЛОВ
.EE
.SH ФОРМАТ
.ES 1
---PAGE
---SCREEN
---LINES
---TABLES
---PORTS
---END
.EE

.SH ОПИСАНИЕ
.PP
Предлагается язык описания сцеанария диалога, ориентированный на
применение алфавитно-цифрового видеотерминала и средств,
предлагаемых библиотеками LINLIB.
.PP
Сценарий предполагает смену страниц на экране, обход полей (линий),
изменение содержимого полей, выбор из меню.
.PP
В качестве элемента сценария диалога рассматривается
экранная форма (страница), которая может содержать поля
для изменения значения переменных в режиме непосредственного
манупулирования, поля пунктов меню,
комментарии к полям, заголовок экрана, и другие элементы.
.PP
С каждым полем связана переменная. Совокупное описание поля, включая
описание изображения и связи с переменными программы,
называется линией. Линии, в зависимости от способа представления
переменных, имеют условный логический тип:
.SS "КОММЕНТАРИЙ"
.SS "ЗАГОЛОВОК"
.SS "ПЕРЕМЕННАЯ"
.SS "ПЕРЕКЛЮЧАТЕЛЬ"
.SS "ПУНКТ МЕНЮ"
.PP
Подробно типы линий описаны в ldemo(1), lin3(3x).
Библиотеки LINLIB предоставляют достаточный для
организации диалога набор средств,
однако подавляющую часть времени занимает подготовка
описаний страниц - заполнение структуры типа LINE
(см. man lin3(3x), файл line.h).
Желательно для подготовки описаний страниц иметь
более удобные и наглядные средства.
.PP
В основу языка положены следующие идеи.
.JP 1
Внешний вид формы на экране готовится обычным редактором
текстов, форму страницы нужно просто "нарисовать" на экране.
В отличие от известной системы FMS фирмы DEC,
не требуется специального редактора форм, а сама технология
создания прикладных программ больше соответствует
традициям систем типа Unix - используются make, mkmf, termcap,
а также дополнительные компоненты небольшого размера.
.JP 2
Описание формы включается в исходный текст программы,
далее используется один из препроцессоров visi.
На этапе сборки программы подключаются библиотеки linlib(3x).
В системе linlib(3x) предусмотрены средства выноса
описания формы из программы, система visi обеспечивает единство
описания экрана в обоих случаях.
.JP 3
Вообще говоря, собственно язык описания пункта сценария
диалога, точнее, его визуального представления,
не должен зависеть от языка программирования.
В настоящее время есть реализация для компилятора СИ,
для операционных систем ДЕМОС-2 и RT-11. Также планируется
создание интерпретатора vint, который позволит за счет
развитых средств ОС ДЕМОС избавиться от накладных
расходов по включению библиотеки поддержки linlib(3x) в каждую
компоненту проблемно-ориентированной системы.
.JP 4
Кроме описания экранной формы должно быть описание
процедурной части диалога, включая проверку ввода новых значений,
а также описание
действий, непосредственно  не связанных с диалогом.
Для описания процедурной части используется язык программирования,
самостоятельных средств язык описания элемента сценария не содержит.
.PP
Описание разбивается на части, которые именуются секциями.
Для выделения секций используются ключевые слова,
которые распознаются препроцессорами visi.
.PP
Порядок размещения секций, как правило, произвольный, если не
оговаривается особо.
Каждое ключевое слово записывается после трех знаков "-",
помещенных в начале строки.
.JP "---PAGE имя"
начало описания страницы, имя является идентификатором
для указания страницы.
.JP "---END"
конец описания страницы, помещается после всех секций.
.JP "---SCREEN"
В этой секции размещается собственно экранная форма,
которая подготавливается при помощи любого универсального
редактора текстов, например red.
Комментарии помещаются в любом месте.
В более сложных случаях поля имеют имена, описание начинается и может
заканчиваться точкой, но не должно содержать пробелов.
.ES
 .имя......
 .имя_2....
.EE
заголовки небольшого размера описываются
таким способом:
.EX ."заголовок"..............
При работе программы текст заголовка выравнивается
по центру.
Названия клавиш задаются через двухбуквенный код клавиши,
принятый в linlib(3x), вместо которого подставляется
название клавиши для конкретного терминала:
.EX .:NL....
.PP
Нулевая позиция каждой строки
имеет некоторые побочные эффекты. Если в ней стоит символ "=", то
в этой строке будет помещен заголовок на всю ширину экрана с текстом,
следующим с первой позиции.
.PP
Если в нулевых позициях нескольких строк стоит символ "+", то
поменяется путь обхода полей при компиляции описания и при работе с формой,
что бывает нужно для работы с таблицами, см. ниже.
.JP "---LINES"
В этой секции описываются линии. Каждое описание
начинается с имени линии, которое встречается в секции
.EX ---SCREEN.
далее после знака равенства следуют позиционные параметры,
разделяемые пробелами. Пустое значение помечается знаком "-".
Синтаксис описания такой же, как у формата lbp (см. lbp(1)).
Естественно, параметры положения на экране не требуются.
.JP "---TABLES"
Смещения при построении таблиц записываются после имени
поля из секции ---SCREEN, например:
.EX t = sizeof(TABLE);
.JP "---PORTS"
Адреса переменных, которые встречаются в секциях ---LINES и
---TABLES, в языке СИ могут иметь более сложный
вид, нежели просто имя, например, адрес элемента структуры.
В этой секции определяется соответствие между такими объектами.
Синтаксис, как и для секции "---PORTS". Пример:
.EX A_ = &a.a_field;
.JP "---#"
Комментарий к описанию формы размещается в строках,
начинающихся с этого ключевого слова.
Может быть размещен в любых секциях
описания.

.SH ПРИМЕРЫ
множество примеров имеется в демонстрационной программе
ldemo.
.SH ФАЙЛЫ
Суффиксы имен файлов, подлежащих обработке препроцессорами visi,
получают дополнительную букву "v".
.SH ДОПОЛНИТЕЛЬНЫЕ ССЫЛКИ
stdio(2), ldemo(1), linlib(3x), lin2(3x), lin4(3x), lin(3x), ajobs(3x),
vcc(1), vlbp(1), termlib(3x), termcap(5), red(1).
.SH ЗАМЕЧАНИЯ

