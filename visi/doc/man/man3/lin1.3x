.TH LIN1 3x LINLIB
.SH ИМЯ
lin1, io_set, hw_set, w_raw, w_chr, w_str, w_strn
\- БИБЛИОТЕКА linlib, НИЖНИЙ УРОВЕНЬ
.SH
.ES
 +----------+   БИБЛИОТЕКА ВВОДА-ВЫВОДА
(c) linlib  !   ДЛЯ АЛФАВИТНО-ЦИФРОВЫХ
 +----------+   ВИДЕОТЕРМИНАЛОВ
.EE
.SH ФОРМАТ
.ES 5

#include <stdio.h>
#include "line.h"

hw_set()

io_set(flags)
int flags;

w_raw(s)
char *s;

w_str(s)
char *s;

w_chr(c)
int c;

w_strn(s, n)
char *s;
int   n;

.EE

.SH ОПИСАНИЕ
Функции данной группы обеспечивают независимость
текстов прикладных программ от
запросов операционных систем,
связанных с установкой режимов
драйвера терминала, а также от кодов управления терминалом
(ESC-последовательностей).
При переносе средств в другие операционные системы
требуется, в основном, реализовать функции
hw_set и io_set. Для повышения шансов успешного
решения такой задачи в linlib используются только
самые общие режимы драйвера терминала,
которые в том или ином виде реализованы во многих
операционных системах. По аналогичной причине
использована библиотека stdio, так как она
поддерживается практически во всех
реализациях языка Си.
.SS "hw_set - установить режимы оборудования терминала"
.PP
Функция hw_set используется для получения описания конкретного терминала
при запуске программы. Вызывается явно из функции main()
до использования всех остальных функций библиотеки.
.PP
Функция запрашивает память при помощи malloc() об'емом
1+1К байт, как требует библиотека
termcap. После получения строк управления терминалом
и кодовых последовательностей курсорных и функциональных
клавиш эта память 1K освобождается, а еще 1К
остается в распоряжении LINLIB.
.SP "ПРИМЕЧАНИЕ"
На самом деле требуемый об'ем временной памяти обычно бывает 1+1+4K байт,
и даже больше,
если используются полные возможности termcap, такие, как
настройка на терминал из общей базы. Следует помнить,
что 4K размещаются в пространстве стека в ОС ДЕМОС
и в области, запрашиваемой malloc, в ОС RT-11.
.PP
В принципе возможно отказаться от расходов на поддержку
терминальной независимости готовой программы,
и заменить при компоновке библиотечный модуль
на более простой, в котором уже
об'явлены необходимые строки для конкретного терминала.
Эти действия, естественно, приведут к заметному
снижению размеров программы и других накладных расходов.
В дистрибутиве LINLIB имеются
два примера таких модулей для терминалов, совместимых
с DEC VT-52 и стандартом ANSI (DEC VT100).

.SS "io_set - установить режимы ввода/вывода"
.PP
Функция служит для переключения самых необходимых
режимов работы с терминалом.
Аргументы функции (флаги режимов)
описаны в файле line.h. Противоречивость флагов
никак не контролируется.
Значения флагов:
.JP IO_VIDEO
Включить режим для работы в экранном стиле.
При этом отключается эхопечать, включается посимвольный ввод с клавиатуры,
подавляется действие специальных команд клавиатуры.
Сигнал прерывания, если имел значение "по умолчанию",
перехватывается и приводит к немедленному выходу
из программы, с восстановлением режимов драйвера терминала,
существовавших
до вызова программы.
.JP IO_TTYPE
Включить телеграфный режим - восстановить состояние
терминального драйвера. Восстанавливается стандартный режим клавиатуры,
возобновляется эхопечать и обработка сигнала прерывания
"по умолчанию", если он имел это значение до переключения
io_set(IO_VIDEO);
.PP
Два следующих флага имеют смысл только при включенном режиме
IO_VIDEO:
.JP IO_NOWAIT
Не ожидать ввода с клавиатуры. В этом режиме
непрерывно выполняются асинхронные задания (если они есть),
пока основная программа
ждет возврата из функции r_key (см. lin2(3x)).
.JP IO_WAIT
При обращении к функции
r_key программа становится неактивной до получения
какого-либо кода с клавиатуры.
Этот режим установлен по умолчанию, отключается при вызове функции io_set
с флагом IO_NOWAIT.
.SS "функции вывода на терминал символьных строк"
.PP
Функция w_str выводит строку символов, на которую указывает s,
при этом символы, занимающие две позиции в режиме LCASE,
всегда занимают одну позицию, без обратной косой впереди.
Функция w_chr выводит символ, аналогично w_str.
эти функции нужны для поддержки совместимости
с терминалами, работающими в коде кои-7 (совмещенная таблица).
.PP
Функция w_strn выводит строку символов аналогично w_str, но
обрезает либо дополняет ее пробелами до заданной параметром n длины.
.PP
Функция w_raw, аналогично w_str, тоже выводит строку
символов, но в кодах терминала.
Предназначена для выдачи esc-последовательностей.
.SH ФАЙЛЫ
.JP "stdout"
стандартный вывод библиотеки stdio.
.SH ДОПОЛНИТЕЛЬНЫЕ ССЫЛКИ
stdio(3), ldemo(1), linlib(3x), lin2(3x), lin4(3x), lin(3x), ajobs(3x),
termlib(3x), termcap(5)
.SH ЗАМЕЧАНИЯ
.PP
Можно совершенно спокойно пользоваться функцией printf,
но иметь в виду, что в ОС ДЕМОС есть несколько
символов, которые в режиме lcase всегда будут занимать две позиции,
независимо от режима ucase, например обратная кавычка, вертикальная черта.
.PP
Скользким местом является отработка разлиЧных задержек при выдаче
esc-последовательностей. Это надо для терминалов, которые не умеют
работать с протоколом XON/XOFF (stty tandem), но подключены
по трехпроводным линиям последовательной связи
(такое, к сожалению, бывает и у них и у нас).
В настоящее время не поддерживается
работа с такими терминалами, что приводит к пропаданию
символов на выводе (ломается картинка на экране), если установлена
высокая скорость обмена с терминалом. В ближайшее время этот
недостаток будет устранен. Надо переделать функцию w_raw
и связанную с ней процедуру заполнения строк управления во время настройки
(внутри hw_set).
При желании такую переделку можно сделать самостоятельно,
если у вас есть полный дистрибутив LINLIB.
