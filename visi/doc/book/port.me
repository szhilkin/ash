.he ''- % -'Обеспечение мобильности'
.bp
.sh 1 "Обеспечение мобильности диалоговых программ"
.pp
Здесь в самом общем виде изложено большинство
проблем общего подключения терминала,
которые присущи как печатающим, так и
экранным терминалам.
Причем большинство из них известно только
системным программистам и возникает
только во время настройки системы.
.pp
Для прикладного программиста эти проблемы
не столь заметны, так как если он использует стандартные
средства библиотек ввода/вывода, например,
пакет
.b stdio
языка СИ, то большинство проблем решаются
на уровне стандартной поддержки в драйвере
терминала,
и на пользовательском уровне
никак себя не проявляют.
.pp
Я считаю принципиально важным остановиться подробно
на проблеме обеспечения мобильности прикладных программ
в части зависимости от типа терминала.
Эта проблема не такая простая. Мне попадались примеры программ,
которые демонстрировали отличную идею, но
их реализация была выполнена недостаточно
качественно, например их было вообще невозможно приспособить
к некоторым терминалам.
В результате как ни заманчиво было их применять,
от них приходилось отказываться.
.pp
Для коммерческих программ игнорирование
проблемы переносимости чревато снижением тиража и,
как следствие,
потерей части прибыли.
Конечно же, для написания программ ограниченного
применения, рассчитанных, как правило,
на один-единственный тип терминала, да еще и в условиях
некоммерческой деятельности программиста (в свое удовольствие),
решение проблем переносимости только мешает получать
максимум этого самого удовольствия.
.pp
Наиболее последовательно проблема переносимости решалась
в среде операционной системы
.b UNIX.
.pp
Использование терминалов с кириллицей вызывает новый поток проблем,
но в какой-то мере и они решаются в
операционной системе
.b ДЕМОС,
которая расширена по сравнению с
.b UNIX
средствами работы со стандарными символьными
кодами отечественных терминалов.
.pp
В силу исторических причин наиболее
полно поддерживается телеграфный стиль диалога.
Рассмотрим подробно эти средства, начиная от
аппаратуры подключения терминалов к ЭВМ.
Терминал может быть подключен либо по
параллельному каналу, либо по последовательному,
либо через модем.
Обмен с ЭВМ может быть посимвольный, как на СМ ЭВМ,
либо кадровый, как на ЕС ЭВМ, в обоих случаях
принципы организации диалога значительно
отличаются, здесь рассматривается только
посимвольный обмен.
В современных персональных компьютерах
обмен с экраном терминала построен на другом принципе.
Видеопамять доступна программисту, как обычное адресное
пространство,
вследствие чего многие проблемы,
о которых пойдет речь ниже,
к персональным компьютерам имеют слабое отношение.
Однако следует заметить, что использование
персонального компьютера в качестве терминала другой ЭВМ,
например, при помощи программы
.b PROCOMM ,
наталкивает на аналогичные проблемы.
.pp
Для системного программиста важно знать, какой способ обмена
применяется \*- синхронный либо асинхронный,
дуплексный либо полудуплексный.
.pp
Полудуплексное подключение, когда вводимый с клавиатуры
символ немедленно появляется на устройстве
вывода терминала и одновременно уходит по линии
связи в ЭВМ, в настоящее время практически не применяется.
Как правило, все символы, набираемые на клавиатуре,
появляются на экране или на печати, пройдя по линии связи
до ЭВМ и обратно.
Такое отображение вводимых символов называют эхопечатью.
Далее, синхронный или асинхронный обмен предполагает
координацию ввода/вывода терминала.
Обычно большинство терминалов позволяют набирать текст
одновременно с выводом на экран.
Кроме того, существует опасность возникновения ситуации,
когда терминал не успевает правильно принимать
и отображать символы и специальные команды,
и наоборот, ЭВМ не успевает обрабатывать поступающие
с клавиатуры символы.
.pp
Синхронный способ обмена подразумевает передачу специального
аппаратного сигнала
.b ГОТОВ/НЕГОТОВ .
.br
Вывод на экран продолжается, пока терминал  выставил сигнал
.b ГОТОВ .
.lp
При асинхронном подключении вывод продолжается
до тех пор, пока приемный буфер не заполнится, о чем
терминал сообщает  по линии подключения клавиатуры посылкой
символа
.br
.b "ПЕРЕДАЧУ ОСТАНОВИТЬ (XOFF)" .
После того, как терминал отработает принятые
символы из буфера, он сообщает символом
.br
.b "ПЕРЕДАЧУ ПРОДОЛЖИТЬ (XON"
Такой способ подключения называют
.q "с проtoколом XON/XOFF" .
.pp
Для чего все это здесь рассказано?
Представьте, как будет происходить работа за терминалом,
у которого режимы драйвера и способ подключения
не совпадают.
Если терминал работает в полудуплексном режиме,
а драйвер в дуплексном, вероятно, что каждый набранный символ
будет напечатан дважды.
В худшем случае будет смесь символов,
которые с опозданием печатаются эхо,
и символов, набираемых вами сейчас!
Однако выявить ошибки подключения синхронно/асинхронно иногда
бывает значительно сложнее.
Самая худшая ситуация \*- когда на терминале
печатаются не все символы, которые ЭВМ отправила по линии
связи, либо команды управления дислеем искажены
настолько, что образуют команду, которая например, переводит
дисплей в астономный режим!
.pp
К сожалению, до сих пор встречаются дисплеи, с которыми
невозможно справиться друими способами,
можно только снижать скорость обмена по линии связи,
поскольку они не могут быть синхронизированы никаким способом.
Такое бывает, когда дисплей подключен по 3-х проводной
линии связи
.b "RS-232 (стык С-2)"
и не умеет работать с протоколом
.b "XON/XOFF" .
Существует другой способ правильно работать с ними, не
снижая полезной скорости обмена.
Такие дисплеи, как правило, медленно отрабатывают специальные
команды управления:
погасить экран, прокрутить текст и т.п.
В драйвере терминала имеется собственно возможность задержать
вывод после выдачи определенных кодов,
например "перевод строки".
В системе
.b termcap
имеется  возможность описать соответствующие задержки для всех команд.
Однако, по видимому, далеко не каждая программа пользуется этой
возможностью.
.pp
Так или иначе, все эти проблемы переходят и к видеотерминалам.
Проблема усугубляется тем, что для экранных программ
обычно надо отключать многие стандартные режимы
драйвера, такие как эхопечать, накопление вводимой строки и
ее редактирование в драйвере, и т.д.
В результате обработку многих режимов приходится
выносить на уровень прикладной программы,
а значит, и проблему совместимости решать самому
прикладному программисту.
.pp
Существует еще одна проблема, связанная с выдачей управляющих
последовательностей (команд дисплея) на терминалы,
работающие с кириллицей.
Как известно, в драйвере терминала
.b "ДЕМОС"
имеются режимы для поддержки терминалов,
работающих в коде
.b "ASCII, КОИ-7, КОИ-8."
Для внутреннего представления информации используется
код
.b КОИ-8,
подмножеством которого является код
.b ASCII
(КОДЫ 000-0177).
При выводе на терминал все символы отображаются
в символы соответствующего набора.
Особо неприятным способом это проявляется в режиме
работы с совмещенной таблицей
.b КОИ-7.
Если просто отпечатать на экран команду
управления дисплеем, то можно
получить совсем не то,
что ожидается.
Например, вместо одной буквы верхнего
регистра будет напечатано два знака,
вместо маленькой буквы \*- большая.
Вывод двух знаков можно подавить, тогда при выводе литеры двух
регистров не различаются.
Однако есть несколько специальных символов,
которые в этом режиме все равно занимают две
позиции.
Так, например, может быть "сломана"
строка установки курсора терминала
.b VT-52.
.pp
Видимо, когда создавался стандарт
.b termcap,
проблемы выбора символьного кода для периферийного оборудования ЭВМ
в СССР мало волновали разработчиков в США,
хотя терминалы только с верхним регистром
вполне еще могут где-то эксплуатироваться и у них.
В СССР значительная доля парка терминалов приходится на терминалы,
работающие с совмещенной таблицей
.b КОИ-7,
поэтому проблему нельзя недооценивать и игнорировать.
.pp
Драйвер терминала ОС ДЕМОС имеет режим,
при котором перекодировки
на выводе отключаются.
Этот режим как раз и предлагается в стандартных
руководствах для выдачи команд
управления терминалом, однако для выдачи обычного текста
драйвер надо возвращать в обычный режим.
При этом преимущества работы с буферизацией
сводятся на нет, так как для переключения режимов терминала
надо ждать окончания ввода/вывода,
в результате программа очень медленно выводит на экран.
.pp
Существует еще одна довольно неприятная проблема при работе с терминалами,
у которых клавиатура может генерировать латинские
и русские литеры двух регистров \*- верхнего и нижнего.
У большинства терминалов отечественного производства почему-то
принято, что коды переключения наборов русского и английского алфавитов,
отпечатанные на экран,
влияют на состояние клавиатуры.
Хотя при обычном телеграфном стиле работы это не очень
досаждает, и драйвер имеет соответствующий режим поддержки
таких терминалов, при экранной
работе, например, в редакторе
.b red,
можно заметить, как некоторые буквы набираются не в том регистре,
в каком вы хотите, причем совершенно в непредсказуемом
порядке.
Налицо все симптомы путаницы полудуплексного
и дуплексного режимов,
причем избавиться от этого можно,
только переделав сам дисплей, точнее клавиатуру.
И что самое характерное, терминалы зарубежного
производства, рассчитаные на работу с национальными
алфавитами (в том числе кириллицу),
таким неприятным свойством не обладают.
Наоборот, код переключения алфавитов при
вводе с клавиатуры передается, как обычный код,
без полудуплексных
эффектов,
а код переключения при выводе на экран не влияет на клавиатуру.
.pp
Подвести итог под всеми этими проблемами можно такой.
Прикладному программисту просто не под силу разобраться со
всеми этими проблемами.
Мало того, он и не должен разбираться в проблемах системного программиста.
Лучше, если каждый занимается своим делом.
Проблема заключается в том, что
качественных инструментальных средств катастрофически не хватает.
Собственно, попытка создать свой собственный инструмент
продиктована именно последним обстоятельством.
